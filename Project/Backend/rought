//Fetching all the product 

router.get('/',async (req,res)=>{
    try {
        const products = await Product.find().populate('category');
        res.json(products);
    }
    catch (error) {
        res.status(500).json({message: error.message})
    }
},{timestaps: true})

//Fetching products individually

router.get('/:id', async (req , res)=>{
    try {
        const product = await Product.findById(req.params.id).populate('category');
        if (!product){
            return res.status(404).json({message: 'Product not found'})
        }
        res.json(product)
    }catch (error) {
        res.status(500).json({message: error.message});
    }
})

//Creating new product
 router.post('/', async (req , res)=>{
    try {
        const {name,coverImage,category,weight,discount,discountedPrice,orignalPrice}=req.body;
        const newProduct = new Product ({
            name,
            coverImage,
            category,
            weight,
            discount,
            discountedPrice,
            orignalPrice
        });
        const savedProduct = await newProduct.save();
        res.json(savedProduct); 
    }
    catch(error){
        res.status(400),{message: error.message}
    }
 })

 //Update a product 

router.put('/:id', async (req , res)=>{
    try{
        const updatedProduct = await Product.findByIdAndUpdate(req.params.id , req.body , {new : true})
        if(!updatedProduct){
          return  res.status(404),{message:'Product not found'}
        }
        res.json(updatedProduct)
        
    }
    catch(error){
        res.status(500),{message : error.message}
    }
})


// Delete a product
router.delete('/:id', async (req, res) => {
    try {
      const deletedProduct = await Product.findByIdAndDelete(req.params.id);
      if (!deletedProduct) {
        return res.status(404).json({ message: 'Product not found' });
      }
      res.json({ message: 'Product deleted' });
    } catch (error) {
      console.error(error);
      res.status(500).json({ message: 'Server Error' });
    }
  });
