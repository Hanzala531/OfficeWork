
const createProduct = asyncHandler(async (req, res) => {
  const { 
    name, 
    coverImage, 
    weight, 
    discount, 
    discountedPrice, 
    originalPrice, 
    category, // Changed from categoryName to category
    categoryCoverImage // New field for category cover image
  } = req.body;

  console.log("Request body:", req.body); // Log the request body

  try {
    // Check if the category already exists
    const coverImageLocalPath = req.files?.coverImage[0]?.path;
    const categoryCoverImageLocalPath = req.files?.categoryCoverImage[0]?.path;

    const coverimage = coverImageLocalPath
      ? await uploadOnCloudinary(coverImageLocalPath)
      : null;

    const categorycoverImage = categoryCoverImageLocalPath
      ? await uploadOnCloudinary(categoryCoverImageLocalPath)
      : null;

    console.log("Category name:", category); // Log the category name

    if (!category?.trim()) {
      throw new ApiError(400, "Category name is required");
    }

    let existingCategory = await Category.findOne({ name: category });
    
    // If the category does not exist, create a new one
    if (!existingCategory) {
      console.log("The entered category does not exist. Let's create a new one.");
      existingCategory = new Category({
        name: category,
        coverImage: categorycoverImage?.url || "", // Use the provided category cover image
      });
      await existingCategory.save();
    }

    // Create the new product with the existing or newly created category
    const newProduct = new Product({
      name,
      coverImage: coverimage?.url || "",
      weight,
      discount,
      discountedPrice,
      originalPrice,
      category: existingCategory._id, // Store the ObjectId of the category
    });
    
    const savedProduct = await newProduct.save();
    res.status(201).json(savedProduct);
  } catch (error) {
    console.log("Error in creating product", error);
    throw new ApiError(500, "Something went wrong while creating the product");
  }
});
